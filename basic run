<!DOCTYPE html>
<html>
<head>
  
</head>
<body>

  

  <script>
// Player object with initial position and movement variables
const player = {
  x: 0,
  y: 0,
  isJumping: false,
  isDoubleJumping: false,
  isSprinting: false
};

// Key states to track keyboard input
const keys = {};

// Event listeners to track key presses and releases
document.addEventListener('keydown', e => {
  keys[e.code] = true;
});

document.addEventListener('keyup', e => {
  keys[e.code] = false;
});

// Update function to handle player movement
function update() {
  // Horizontal movement
  if (keys['KeyA']) {
    player.x -= player.isSprinting ? 3 : 1;
  } else if (keys['KeyD']) {
    player.x += player.isSprinting ? 3 : 1;
  }

  // Sprinting detection
  if (keys['KeyA'] || keys['KeyD']) {
    if (player.isSprinting) {
      player.isSprinting = false;
    } else if (!player.isJumping && !player.isDoubleJumping) {
      player.isSprinting = true;
      setTimeout(() => {
        player.isSprinting = false;
      }, 200);
    }
  }

  // Jumping
  if (keys['KeyW'] && !player.isJumping && !player.isDoubleJumping) {
    player.isJumping = true;
    player.y -= 10; // Adjust the jump height as needed
  } else if (keys['KeyW'] && player.isJumping && !player.isDoubleJumping) {
    player.isJumping = false;
    player.isDoubleJumping = true;
    player.y -= 10; // Adjust the double jump height as needed
  }

  // Apply gravity
  if (player.y < 0) {
    player.y += 2; // Adjust the gravity value as needed
  } else {
    player.y = 0;
    player.isJumping = false;
    player.isDoubleJumping = false;
  }

  // Update player position
  // You would typically update the player's visual representation here
  console.log(`Player position: (${player.x}, ${player.y})`);

  // Call the update function on each frame
  requestAnimationFrame(update);
}

// Start the game loop
update();

  </script>

</body>
</html>
